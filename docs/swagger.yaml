openapi: '3.0.0'
info:
  description: 'This is the Swagger Documentation for NUSAbroad API'
  version: '1.0.0'
  title: 'NUSAbroad'
tags:
  - name: 'users'
    description: 'Calls to users information'
  - name: 'countries'
    description: 'Calls to countries information'
  - name: 'universities'
    description: 'Calls to universities information'
  - name: 'links'
    description: 'Calls to links information'
  - name: 'mappings'
    description: 'Calls to mappings information'
  - name: 'modules'
    description: 'Calls to modules information'
schemes:
  - 'https'
  - 'http'
paths:
  /login:
    post:
      tags:
        - 'users'
      summary: 'login'
      description: ''
      operationId: 'login'
      consumes:
        - 'application/json'
      requestBody:
        description: 'username and password that is used to validate user'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: # <!--- form field name
                  type: 'string'
                password:
                  type: 'string'
            example:
              email: nus@nus.edu
              password: nus123
      responses:
        '200':
          description: 'Success'
  /countries:
    get:
      tags:
        - 'countries'
      summary: 'Get list of countries'
      responses:
        '200':
          description: 'successful operation'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Country'
        '400':
          description: 'Invalid status value'
    post:
      tags:
        - 'countries'
      summary: 'Add a country to NUSAbroad'
      description: ''
      operationId: 'addCountry'
      consumes:
        - 'application/json'
      requestBody:
        description: 'Country object that needs to be added to NUSAbroad'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Country'
      responses:
        '400':
          description: 'Invalid input'
  /countries/{id}:
    get:
      tags:
        - 'countries'
      summary: 'Find country by id'
      description: 'Returns a single country'
      operationId: 'getcountryById'
      parameters:
        - name: 'id'
          in: 'path'
          description: 'ID of country to return'
          required: true
          type: 'integer'
          format: 'int64'
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/Country'
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Country not found'
    put:
      tags:
        - 'countries'
      summary: 'Update an existing country'
      description: ''
      operationId: 'updateCountry'
      parameters:
        - name: 'id'
          in: 'path'
          description: 'ID of country to return'
          required: true
          type: 'integer'
          format: 'int64'
      consumes:
        - 'application/json'
      requestBody:
        description: 'Country object that needs to be updated to NUSAbroad'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Country'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Country not found'
    delete:
      tags:
        - 'countries'
      summary: 'Deletes a country'
      description: ''
      operationId: 'deleteCountry'
      parameters:
        - name: 'id'
          in: 'path'
          description: 'id of country to delete'
          required: true
          type: 'integer'
          format: 'int64'
      responses:
        '400':
          description: 'Invalid ID supplied'
        '404':
          description: 'Country not found'
  /universities/import:
    post:
      tags:
        - 'universities'
      summary: 'upload university information using .csv'
      description: ''
      operationId: 'importUniversities'
      consumes:
        - 'multipart/form-data'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: file
                  format: .csv'

      responses:
        '201':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/University'
  /universities/reset:
    post:
      tags:
        - 'universities'
      summary: 'Clear all universities data in NUSAbroad'
      description: ''
      operationId: 'Reset universities'
      consumes:
        - 'application/json'
      requestBody:
      responses:
        '200':
          description: 'Success'
  /mappings/import:
    post:
      tags:
        - 'mappings'
      summary: 'upload mappings information using .csv'
      description: ''
      operationId: 'importMappings'
      consumes:
        - 'multipart/form-data'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: file
                  format: .csv'
      responses:
        '201':
          description: 'Success'
  /mappings/reset:
    post:
      tags:
        - 'mappings'
      summary: 'Clear all mappings data in NUSAbroad'
      description: ''
      operationId: 'resetMappings'
      consumes:
        - 'application/json'
      requestBody:
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/Mapping'
  /modules/populate:
    post:
      tags:
        - 'modules'
      summary: 'populate modules information using with the specified academic year'
      description: ''
      operationId: 'populateModules'
      requestBody:
        description: 'Populating modules with the modules of an academic year'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                year: # <!--- form field name
                  type: 'string'
            example:
              year: 2020-2021

        example:
      responses:
        '200':
          description: 'Success'
  /modules/reset:
    post:
      tags:
        - 'modules'
      summary: 'Clear all modules data in NUSAbroad'
      description: ''
      operationId: 'resetModules'
      consumes:
        - 'application/json'
      requestBody:
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/Mapping'
  /links/scrape:
    post:
      tags:
        - 'links'
      summary: 'Retrieves links to infosheet of exchange universities'
      description: ''
      operationId: 'scrapeLinks'
      requestBody:
        description: 'Retrieves links to infosheet of exchange universities from GRO website'
      responses:
        '200':
          description: 'Success'
  /links/reset:
    post:
      tags:
        - 'links'
      summary: 'Clear all links in NUSAbroad'
      description: ''
      operationId: 'resetLinks'
      consumes:
        - 'application/json'
      requestBody:
      responses:
        '200':
          description: 'Success'

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-auth-token

definitions:
  Country:
    type: 'object'
    required:
      - 'name'
    properties:
      name:
        type: 'string'
        example: 'Singapore'
  University:
    type: 'object'
    required:
      - 'countryId'
      - 'name'
    properties:
      name:
        type: 'string'
        example: 'University of New South Wales'
      countryId:
        type: 'integer'
        example: 1
  Link:
    type: 'object'
    required:
      - 'name'
      - 'link'
    properties:
      name:
        type: 'string'
        example: 'University website'
      link:
        type: 'string'
        example: 'https://www.nus.edu.sg/'
      universityId:
        type: 'integer'
        example: 2
  Mapping:
    type: 'object'
    required:
      - 'nusModuleCode'
      - 'nusModuleName'
      - 'nusModultCredits'
      - 'nusFacultyId'
      - 'nusModuleFaculty'
      - 'partnerModuleCode'
      - 'partnerModuleName'
      - 'partnerModuleCredits'
      - 'parnterUniversityId'
    properties:
      nusFacultyId:
        type: 'integer'
        example: 1
      nusModuleFaculty:
        type: 'string'
        example: 'SoC'
      nusModuleCode:
        type: 'string'
        example: 'CS3216'
      nusModuleName:
        type: 'string'
        example: 'Software Product Engineering for Digital Markets'
      nusModuleCredits:
        type: 'int'
        example: '1'
      partnerModuleCode:
        type: 'string'
        example: 'CS3216'
      partnerModuleName:
        type: 'string'
        example: 'Software Product Engineering for Fun'
      partnerModuleCredits:
        type: 'float'
        example: '1.0'
      partnerUniversityId:
        type: 'int'
        example: '1'
